// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTracker.DataAccess.Data;

#nullable disable

namespace ProjectTracker.DataAccess.Migrations
{
    [DbContext(typeof(ProjectTrackerDbContext))]
    [Migration("20220719131604_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjectTracker.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Finans"
                        },
                        new
                        {
                            Id = 2,
                            Name = "İnsan Kaynakları"
                        });
                });

            modelBuilder.Entity("ProjectTracker.Domain.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActualFinishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double>("CompletedRate")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedFinishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CompletedRate = 0.0,
                            Description = "Kale grubu ve bankalar arası ödeme işlemleri",
                            Name = "Ödeme Sistemleri",
                            StartedDate = new DateTime(2022, 7, 19, 16, 16, 4, 193, DateTimeKind.Local).AddTicks(7582)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CompletedRate = 0.0,
                            Description = "Kale grubu İK personeli yetkilendirme uygulaması",
                            Name = "HR Yetki Modülü",
                            StartedDate = new DateTime(2022, 7, 19, 16, 16, 4, 193, DateTimeKind.Local).AddTicks(7585)
                        });
                });

            modelBuilder.Entity("ProjectTracker.Domain.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Db oluşturulacak",
                            ExpectedDate = new DateTime(2022, 7, 26, 16, 16, 4, 193, DateTimeKind.Local).AddTicks(7538),
                            IsCompleted = false,
                            Name = "Veritabanı işlemleri",
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = ".NET Core ile API altyapısı...",
                            ExpectedDate = new DateTime(2022, 8, 3, 16, 16, 4, 193, DateTimeKind.Local).AddTicks(7568),
                            IsCompleted = false,
                            Name = "API Yazılacak",
                            ProjectId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Angular öğrenilecek",
                            ExpectedDate = new DateTime(2022, 7, 26, 16, 16, 4, 193, DateTimeKind.Local).AddTicks(7571),
                            IsCompleted = false,
                            Name = "Angular Altyapısı",
                            ProjectId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "....",
                            ExpectedDate = new DateTime(2022, 7, 22, 16, 16, 4, 193, DateTimeKind.Local).AddTicks(7576),
                            IsCompleted = false,
                            Name = "Güvenlik mekanizması",
                            ProjectId = 2
                        });
                });

            modelBuilder.Entity("ProjectTracker.Domain.Project", b =>
                {
                    b.HasOne("ProjectTracker.Domain.Category", "Category")
                        .WithMany("Projects")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProjectTracker.Domain.ProjectTask", b =>
                {
                    b.HasOne("ProjectTracker.Domain.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectTracker.Domain.Category", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ProjectTracker.Domain.Project", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
